generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  NIVEL_1
  NIVEL_2
  NIVEL_3
}

model User {
  id          String   @id
  name        String
  email       String   @unique
  password    String
  role        Role
  avatar_url  String?
  created_at  DateTime
  updated_at  DateTime @updatedAt
  client_id   String?
  client      Client?  @relation(fields: [client_id], references: [id])
  created_by  Ticket[] @relation(name: "created_by")
  responsible Ticket[] @relation(name: "responsible")

  @@map("users")
}

model Address {
  id           String   @id
  postal_code  String
  state        String
  city         String
  street       String
  neighborhood String
  number       Decimal
  complement   String?
  created_at   DateTime
  updated_at   DateTime @updatedAt
  Client       Client[]
}

model Client {
  id              String    @id
  document        String    @unique
  name            String
  enterprise_name String
  email           String
  phone           String[]
  address_id      String
  address         Address   @relation(fields: [address_id], references: [id])
  created_at      DateTime
  updated_at      DateTime  @updatedAt
  deleted         Boolean   @default(false)
  deleted_at      DateTime?
  User            User[]
  Ticket          Ticket[]

  @@map("clients")
}

enum Priorit {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum TypeMaintenance {
  CORRECTIVE
  ADAPTIVE
  PREDICTIVE
  PREVENTIVE
}

enum Status {
  NEW
  IN_PROGRESS
  IN_VALIDATION
  FINISHED
  CANCEL
}

model Ticket {
  id               String          @id
  ticket_number    String          @unique
  title            String
  description      String
  type_maintenance TypeMaintenance
  priorit          Priorit
  estimative_hours Decimal
  observation      String?
  status           Status
  created_at       DateTime
  updated_at       DateTime        @updatedAt

  created_by_id String
  created_by    User   @relation(name: "created_by", fields: [created_by_id], references: [id])

  responsible_id String?
  responsible    User?   @relation(name: "responsible", fields: [responsible_id], references: [id])

  client_id String
  client    Client @relation(fields: [client_id], references: [id])

  @@map("tickets")
}
